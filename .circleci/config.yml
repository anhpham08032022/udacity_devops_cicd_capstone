version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3

jobs:
  lint-dockerfile:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  # Refererd from this link: https://circleci.com/docs/building-docker-images/
  push-docker-images:
    docker:
      - image: "cimg/python:3.10"
        user: root
    steps:
      - checkout
      - setup_remote_docker:
          version: "20.10.14"
          docker_layer_caching: false
      - run:
          name: build push to docker hub
          command: |
            docker logout docker.io
            docker login docker.io -u $DOCKER_USERNAME --password $DOCKER_PASSWORD
            docker build . -t anhpham/capstone-project:latest
            docker tag anhpham/capstone-project:latest 081104062022/capstone-project:latest
            docker push docker.io/081104062022/capstone-project:latest

  # Reference from this source: https://circleci.com/developer/orbs/orb/circleci/aws-eks
  create-aws-cluster:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws-eks/create-cluster:
          cluster-name: anhpham-capstone
          aws-region: us-east-1
          node-type: t3.medium
          nodes-min: 1
          nodes-max: 3                    

  create-deployment:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: anhpham-capstone
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: deployment.yaml
          show-kubectl-command: true
      - kubernetes/create-or-update-resource:
          resource-file-path: service.yaml
          show-kubectl-command: true    
      - kubernetes/create-or-update-resource:
          resource-file-path: eks.yaml
          show-kubectl-command: true
      - run:
          command: |
            kubectl get nodes -o wide
            kubectl get all 
            kubectl get svc -o wide
            kubectl describe pods

workflows:
  deployment:
    jobs:
      - lint-dockerfile
      - push-docker-images:
          requires:
            - "lint-dockerfile"
      - create-aws-cluster:
          requires:
            - "lint-dockerfile"
      - create-deployment:
          requires: [build-push-docker-images, create-aws-cluster]